#!/bin/bash

export Rootfs="$PREFIX/var/lib/proot-distro/installed-rootfs/box4droid"
export lastRes=1280x720
string='export VK_ICD_FILENAMES="/opt/turnip-zink/arm64/share/vulkan/icd.d/freedreno_icd.aarch64.json:/opt/turnip-zink/armhf/share/vulkan/icd.d/freedreno_icd.armv8.2l.json"'

if [ "$1" = "--help" ]; then
echo ""
echo " Box4Droid é um script simples que visa facilitar a usabilidade do Box86/Box64 usando um RootFS pré-configurado com alguns scripts de configuração para ajudar no uso de variáveis."
echo ""
echo " Aqui estão alguns parâmetros para se usar: "
echo ""
echo "  --help              Mostra uma pagina de ajuda."
echo ""
echo "  --update            Atualiza os scripts para a ultima versão disponível."
echo ""
echo "  Uninstall-box       Vai remover completamente todos os dados referentes ao Box4Droid (o RootFS e a pasta Box4Droid na memória interna)"
echo ""
exit 0
elif [ "$1" = "--update" ]; then
if [ "$(sed '106q;d' $Rootfs/root/.bashrc)" = "export Lang=eng" ]; then
echo "Updating scripts..."
cd $Rootfs/opt/
wget https://github.com/Herick75/Box4Droid/raw/main/Scripts/0.0.3/scripts-En.tar.gz
tar -xvf scripts-En.tar.gz
rm -rf scripts-En.tar.gz
cd $HOME
wget https://raw.githubusercontent.com/Herick75/Box4Droid/main/Scripts/0.0.3/Init-En/Uninstall-box
wget https://raw.githubusercontent.com/Herick75/Box4Droid/main/Scripts/0.0.3/Init-En/box
wget https://raw.githubusercontent.com/Herick75/Box4Droid/main/Scripts/0.0.3/Init-En/start-ubuntu.sh
wget https://raw.githubusercontent.com/Herick75/Box4Droid/main/Scripts/0.0.3/Init-En/chroot.sh

chmod +x Uninstall-box
chmod +x box
chmod +x start-ubuntu.sh
chmod +x chroot.sh

rm -rf $HOME/Box4Droid/start-ubuntu.sh
rm -rf $HOME/Box4Droid/chroot.sh
rm -rf $PREFIX/bin/Uninstall-box
cp start-ubuntu.sh chroot.sh $HOME/Box4Droid
cp Uninstall-box $PREFIX/bin
cat box > $PREFIX/bin/box
rm -rf $HOME/box
rm -rf $HOME/Uninstall-box
rm -rf $HOME/start-ubuntu.sh
rm -rf $HOME/chroot.sh

echo " Updated !"
elif [ "$(sed '106q;d' $Rootfs/root/.bashrc)" = "export Lang=ptbr" ]; then
echo "Atualizando..."
cd $Rootfs/opt/
wget https://github.com/Herick75/Box4Droid/raw/main/Scripts/0.0.3/scripts-Ptbr.tar.gz
tar -xvf scripts-Ptbr.tar.gz
rm -rf scripts-Ptbr.tar.gz
cd $HOME
wget https://raw.githubusercontent.com/Herick75/Box4Droid/main/Scripts/0.0.3/Init-Ptbr/Uninstall-box
wget https://raw.githubusercontent.com/Herick75/Box4Droid/main/Scripts/0.0.3/Init-Ptbr/box
wget https://raw.githubusercontent.com/Herick75/Box4Droid/main/Scripts/0.0.3/Init-Ptbr/start-ubuntu.sh
wget https://raw.githubusercontent.com/Herick75/Box4Droid/main/Scripts/0.0.3/Init-Ptbr/chroot.sh

chmod +x Uninstall-box
chmod +x box
chmod +x start-ubuntu.sh
chmod +x chroot.sh

rm -rf $HOME/Box4Droid/start-ubuntu.sh
rm -rf $HOME/Box4Droid/chroot.sh
rm -rf $PREFIX/bin/Uninstall-box
cp start-ubuntu.sh chroot.sh $HOME/Box4Droid
cp Uninstall-box $PREFIX/bin
cat box > $PREFIX/bin/box
rm -rf $HOME/box
rm -rf $HOME/Uninstall-box
rm -rf $HOME/start-ubuntu.sh
rm -rf $HOME/chroot.sh


echo ""
echo " Atualizado !"
exit 0
break
fi
fi

while true; do
clear

addRes(){

while true; do
clear

echo ""
echo " Por favor, digite uma resolucão valida (eg: 1560x720)."
echo ""

if [[ $lastRes == "" ]]; then

read reso

if [[ $reso == "" ]]; then

addRes

fi

export res=$reso

sed -i "109s|.*|export res=$reso|" $Rootfs/root/.bashrc;

sed -i "4s|.*|export lastRes=$reso|" $PREFIX/bin/box;

else

echo -e " A ultima resolucão digitada foi \033[3;36m $lastRes\033[0m , para usar ela novamente,apenas pressione enter de novo."
echo ""

read reso

if [[ $reso == "" ]]; then

sed -i "109s|.*|export res=$lastRes|" $Rootfs/root/.bashrc;

export res=$lastRes

else

sed -i "109s|.*|export res=$reso|" $Rootfs/root/.bashrc;

sed -i "4s|.*|export lastRes=$reso|" $PREFIX/bin/box;

export res=$reso

fi

fi


break
done

}

echo ""
echo " Por favor, selecione uma resolucão :"
echo ""
echo ""
echo "1)640x480 (4:3)"
echo "2)800x600 (4:3)"
echo "3)1024x768 (4:3)"
echo "4)1280x720 (16:9)"
echo "5)1920x1080 (16:9)"
echo "6)1400x600 (7:3)"
echo "7)Resolucão customizada"
echo "0)Sair"


echo ""

    read -p " ..." option

    case $option in
        [1]* ) export res=640x480x24;sed -i "109s|.*|export res=640x480|" $Rootfs/root/.bashrc;break;;
        [2]* ) export res=800x600x24;sed -i "109s|.*|export res=800x600|" $Rootfs/root/.bashrc;break;;
	[3]* ) export res=1024x768x24;sed -i "109s|.*|export res=1024x768|" $Rootfs/root/.bashrc;break;;
	[4]* ) export res=1280x720x24;sed -i "109s|.*|export res=1280x720|" $Rootfs/root/.bashrc;break;;
	[5]* ) export res=1920x1080x24;sed -i "109s|.*|export res=1920x1080|" $Rootfs/root/.bashrc;break;;
	[6]* ) export res=1400x600x24;sed -i "109s|.*|export res=1400x600|" $Rootfs/root/.bashrc;break;;
	[7]* ) addRes;break;;
	[0]* ) exit 0;break;;
    esac
done
if [ "$(sed '105q;d' $Rootfs/root/.bashrc)" = "export termux=new" ] || [ "$(sed '105q;d' $Rootfs/root/.bashrc)" = "" ]; then
termux-x11 :1 &>/dev/null & pulseaudio --start --load="module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1" --exit-idle-time=-1 & sleep 1
elif [ "$(sed '105q;d' $Rootfs/root/.bashrc)" = "export termux=old" ]; then
DISPLAY=:1 termux-x11 &>/dev/null & env DISPLAY=:1 Xvfb -listen tcp :1 -ac -screen 0 $res &>/dev/null & pulseaudio --start --load="module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1" --exit-idle-time=-1 &>/dev/null & sleep 1
fi

if [ "$(sed '108q;d' $Rootfs/root/.bashrc)" = "export SCRIPT=proot" ]; then

cd $HOME/Box4Droid/

if [ "$(sed '100q;d' $Rootfs/root/.bashrc)" = "export GALLIUM_DRIVER=virpipe" ]; then

MESA_NO_ERROR=1 MESA_GL_VERSION_OVERRIDE=4.3COMPAT MESA_GLES_VERSION_OVERRIDE=3.2 virgl_test_server_android &

fi

./start-ubuntu.sh

pkill Xvfb

if [ "$(sed '100q;d' $Rootf/root/.bashrc)" = "export GALLIUM_DRIVER=virpipe" ]; then

pkill virgl_test_serv

fi

pkill -f "app_process / com.termux.x11"

elif [ "$(sed '108q;d' $Rootfs/root/.bashrc)" = "export SCRIPT=chroot" ]; then

if [ "$(sudo id -u)" == "0" ]; then

echo ""

echo -e " \033[0;92mAcesso root detectado com sucesso !! \033[0m"

echo ""

cd $HOME/Box4Droid

sudo ./chroot.sh

else

sed -i '101s/.*/export LIBGL_DRIVERS_PATH="\/opt\/turnip-zink\/arm64\/lib\/aarch64-linux-gnu\/dri\/:\/opt\/turnip-zink\/armhf\/lib\/arm-linux-gnueabihf\/dri\/:$LIBGL_DRIVERS_PATH"/' $Rootfs/root/.bashrc;

sed -i "102c\\${string}" $Rootfs/root/.bashrc;

sed -i "108s/.*/export SCRIPT=prootdistro/" $Rootfs/root/.bashrc;

echo ""

echo -e " \033[0;91mAcesso root não encontrado, voltando para o modo Proot ...\033[0m" & sleep 4

echo ""




fi

pkill -f "app_process / com.termux.x11"

pkill Xvfb

elif [ "$(sed '108q;d' $Rootfs/root/.bashrc)" = "export SCRIPT=prootdistro" ]; then

if [ "$(sed '100q;d' $Rootfs/root/.bashrc)" = "export GALLIUM_DRIVER=virpipe" ]; then

MESA_NO_ERROR=1 MESA_GL_VERSION_OVERRIDE=4.3COMPAT MESA_GLES_VERSION_OVERRIDE=3.2 virgl_test_server_android &

proot-distro login box4droid --isolated --bind /sdcard:/sdcard --bind $PREFIX/tmp/.virgl_test:/tmp/.virgl_test --bind $PREFIX/tmp/.X11-unix:/tmp/.X11-unix --no-sysvipc

else

proot-distro login box4droid --isolated --bind /sdcard:/sdcard --bind $PREFIX/tmp/.X11-unix/:/tmp/.X11-unix --bind $PREFIX/tmp/.X1-lock:/tmp/.X1-lock

fi


if [ "$(sed '100q;d' $Rootfs/root/.bashrc)" = "export GALLIUM_DRIVER=virpipe" ]; then

pkill virgl_test_serv

pkill -f "app_process / com.termux.x11"

pkill Xvfb

fi

fi

pkill virgl_test_serv

pkill -f "app_process / com.termux.x11"

pkill Xvfb
